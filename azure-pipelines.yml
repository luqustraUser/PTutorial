trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

stages:
- stage: Terraform
  jobs:
  - job: InitPlanApply
    steps:
    - checkout: self

    # Install Terraform 1.5.6
    - task: PowerShell@2
      displayName: 'Install Terraform 1.5.6'
      inputs:
        targetType: inline
        script: |
          $ver = '1.5.6'
          Write-Host "Downloading Terraform $ver..."
          Invoke-WebRequest -Uri "https://releases.hashicorp.com/terraform/$ver/terraform_${ver}_windows_amd64.zip" -OutFile tf.zip
          $dest = "$env:USERPROFILE\terraform"
          if (-not (Test-Path $dest)) { New-Item -ItemType Directory -Path $dest | Out-Null }
          Expand-Archive tf.zip -DestinationPath $dest -Force
          Write-Host "##vso[task.setvariable variable=TF_PATH]$dest"
          & "$dest\terraform.exe" -version

    # Run Terraform using Azure service connection
    - task: AzureCLI@2
      displayName: 'Terraform Init / Plan / Apply'
      inputs:
        azureSubscription: 'AzureConnection-PTutorial'   # <-- Your Azure service connection
        scriptType: ps
        scriptLocation: inlineScript
        workingDirectory: '$(Build.SourcesDirectory)'    # <-- This is the GitHub repo root
        inlineScript: |
          $env:PATH = "$(TF_PATH);$env:PATH"
          terraform -version

          # Backend init
          terraform init -reconfigure

          # Plan and Apply
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan
